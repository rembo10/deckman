name: check 

on: [push, pull_request]

jobs:
  tests:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Bootstrap Poetry
        run: |
          curl -sL https://install.python-poetry.org | python - -y

      - name: Update PATH
        shell: bash
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Configure poetry
        shell: bash
        run: poetry config virtualenvs.in-project true

      - name: Set up cache
        uses: actions/cache@v2
        id: cache
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Ensure cache is healthy
        if: steps.cache.outputs.cache-hit == 'true'
        shell: bash
        run: timeout 10s poetry run pip --version || rm -rf .venv

      - name: Install dependencies
        shell: bash
        run: poetry install

      - name: Run pytest
        shell: bash
        run: poetry run pytest tests/

      - name: Run flake8
        shell: bash
        run: poetry run flake8 src/ tests/

      - name: Run mypy
        shell: bash
        run: poetry run mypy src/ tests/
